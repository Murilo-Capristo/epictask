-- Drop das tabelas antigas se existirem
DROP TABLE IF EXISTS task CASCADE;
DROP TABLE IF EXISTS epic_user CASCADE;

-- Criação da tabela de usuários
CREATE TABLE epic_user
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email VARCHAR(255) UNIQUE,
    name VARCHAR(255),
    avatar_url VARCHAR(255),
    score INTEGER DEFAULT 0,
    CONSTRAINT pk_epic_user PRIMARY KEY (id)
);

-- Criação da tabela de tasks
CREATE TABLE task
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    score INTEGER NOT NULL,
    status INTEGER NOT NULL,
    user_id BIGINT,
    CONSTRAINT pk_task PRIMARY KEY (id),
    CONSTRAINT fk_task_user FOREIGN KEY (user_id)
        REFERENCES epic_user(id)
        ON DELETE SET NULL
);

-- Inserção das tasks iniciais
INSERT INTO task (title, description, score, status)
VALUES
    ('Estudar Java', 'Revisar conceitos de orientação a objetos', 8, 0),
    ('Criar API REST', 'Implementar endpoints com Spring Boot', 10, 0),
    ('Testar aplicação', 'Escrever testes unitários com JUnit', 7, 0),
    ('Documentar projeto', 'Criar README e documentação da API', 5, 1),
    ('Deploy no Heroku', 'Subir aplicação para ambiente online', 9, 0);
